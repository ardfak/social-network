{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","console","log","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","MyPosts","memo","postsElements","posts","reverse","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","Textarea","Element","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.9b5fc16f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      console.log(this.props)\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return connectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__img\":\"ProfileInfo_content__img__3-c0q\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__17ep4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2i_r6\",\"posts\":\"MyPosts_posts__X7uRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__o55Gt\"};","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} alt='' />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://www.meme-arsenal.com/memes/bf0296e8bfa92558d0ca180289194068.jpg\" alt=\"\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>Like </span>{props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\nimport { Element } from '../../../hoc/withFormsControls';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post message={p.message} likesCount={p.likesCount} />);\r\n  console.log(props)\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst Textarea = Element('textarea');\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name='newPostText'\r\n          placeholder='Enter your post'\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPost/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}