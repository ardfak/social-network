{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/common/Preloader/preloader.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/obj-helpers/object-helpers.js","redux/users-reducer.js","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/sidebar-reducer.js","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","hoc/withFormsControls.js","utils/validators/validators.js","components/common/Pagination/Pagination.module.css","components/Users/users.module.css","assets/images/user.png","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logOut","initialState","dialogs","id","name","messages","message","sendMessage","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","updateObjectInArray","items","itemsId","objPropsName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","props","Pagination","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","inner","loginBlock","isAuth","button","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderConteiner","auth","Input","Element","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","formSummaryError","CreateField","required","length","stopSubmit","_error","formData","sidebarReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","lds_roller","input","meta","touched","hasError","formControl","plaseholder","validators","component","text","placeholder","validate","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","res","newPost","postId"],"mappings":"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","file":"static/js/main.5669bd64.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"732a7a8f-3eec-4e2c-be9b-2766f7776bfe\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete method. Please use profileAPI object.\");\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {\r\n      email,\r\n      password,\r\n      rememberMe,\r\n    });\r\n  },\r\n  logOut() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}] // Пушим в конец\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_roller\":\"preloader_lds_roller__NOnJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__29vTX\",\"item\":\"Navbar_item__3z3IY\",\"active\":\"Navbar_active__2t6JW\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={`${s.item}`}>\r\n        <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Settings</a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const updateObjectInArray = (items, itemsId, objPropsName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropsName] === itemsId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u\r\n  })\r\n}","import { usersAPI } from '../api/api'\r\nimport { updateObjectInArray } from '../utils/obj-helpers/object-helpers'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {\r\n          followed: true\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {\r\n          followed: false\r\n        })\r\n      }\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users }\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage }\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count }\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching }\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n  const res = await apiMethod(userId)\r\n  if (res.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      usersAPI.follow.bind(usersAPI),\r\n      followSuccess\r\n    )\r\n  }\r\n}\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      usersAPI.unfollow.bind(usersAPI),\r\n      unfollowSuccess\r\n    )\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React, { useState } from 'react'\r\nimport styles from './Pagination.module.css'\r\nimport cn from 'classnames'\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChanged(p)\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          )\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginator\r\n","import React from 'react'\r\nimport styles from './users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img\r\n              src={user.photos.small != null ? user.photos.small : userPhoto}\r\n              alt={'Аватарка'}\r\n              className={styles.userPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                unfollow(user.id)\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                follow(user.id)\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'user.location.country'}</div>\r\n          <div>{'user.location.city'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport styles from './users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Pagination from '../common/Pagination/Pagination'\r\nimport User from './User'\r\n\r\nlet Users = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  users,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      <div>\r\n        {users.map((u) => (\r\n          <User\r\n            key={u.id}\r\n            user={u}\r\n            followingInProgress={props.followingInProgress}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter(u => true )\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  unfollow,\r\n  toggleFollowingProgress,\r\n  requestUsers\r\n} from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { compose } from 'redux'\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress\r\n} from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props\r\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.requestUsers(pageNumber, this.props.pageSize)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n  })\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t\t<div className={s.inner}>\r\n\t\t\t\t<img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\" />\r\n\t\t\t\t<div className={s.loginBlock}>\r\n\t\t\t\t{props.isAuth === true ? <div>{props.login} - <button onClick={props.logOut}>Log out</button></div> : \r\n\t\t\t\t\t<div className={s.nav}>\r\n\t\t\t\t\t<NavLink to={'/login'} className={s.button}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA, payload:\r\n    {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let {id, login, email} = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n    dispatch(stopSubmit(\"login\", {_error: message}));\r\n  }\r\n}\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n  let response = await authAPI.logOut();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logOut } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderConteiner extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logOut })(HeaderConteiner);\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { Element, CreateField } from \"../../hoc/withFormsControls\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst Input = Element(\"input\");\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n      { error && <div className={styles.formSummaryError}>\r\n          {error}\r\n        </div>}\r\n          {CreateField('Login', 'email', [required], Input)}\r\n          {CreateField('Password', 'password', [required], Input, {type: 'password'})}\r\n          {CreateField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember me')}\r\n\r\n        <div>\r\n          <button>Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to='/profile' />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","let initialState = {};\r\n\r\nexport const sidebarReducer = (state=initialState, action) => {\r\n\treturn state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import { combineReducers, createStore, applyMiddleware, compose } from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './app-reducer'\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  reducers,\r\n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleWare))\r\n)\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport styles from '../components/common/FormsControls/FormsControls.module.css'\r\nimport Preloader from '../components/common/Preloader/Preloader'\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </React.Suspense>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom'\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderComponent from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport { connect, Provider } from 'react-redux'\nimport store from './redux/redux-store'\nimport { compose } from 'redux'\nimport { initializeApp } from './redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader'\nimport { withSuspense } from './hoc/withSuspense'\nconst DialogsContainer = React.lazy(() =>\n  import('./components/Dialogs/DialogsContainer')\n)\nconst ProfileContainer = React.lazy(() =>\n  import('./components/Profile/ProfileContainer')\n)\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className='app-wrapper'>\n        <HeaderComponent />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n          <Route\n            path='/profile/:userId?'\n            render={withSuspense(ProfileContainer)}\n          />\n          <Route path='/users' render={() => <UsersContainer />} />\n          <Route path='/login' render={() => <Login />} />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nconst MainApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default MainApp\n","import * as serviceWorker from './serviceWorker'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport MainApp from './App'\n\nReactDOM.render(<MainApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react';\r\nimport styles from './preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={styles.lds_roller}>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3nRHA\",\"error\":\"FormsControls_error__3cWVP\",\"formSummaryError\":\"FormsControls_formSummaryError__1bW1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Zp6q\",\"inner\":\"Header_inner__xt4ZD\",\"loginBlock\":\"Header_loginBlock__2lSsI\"};","import React from \"react\";\r\nimport styles from \"../components/common/FormsControls/FormsControls.module.css\";\r\nimport {required} from \"../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Element = Element => ({input, meta: {touched, error}, ...props}) => {\r\n  const hasError = touched && error;\r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        <Element {...input} {...props} />\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CreateField = (plaseholder, name, validators, component, props={}, text='') => (\r\n  <div>\r\n    <Field\r\n      placeholder={plaseholder}\r\n      component={component}\r\n      name={name}\r\n      validate={validators}\r\n      {...props}\r\n    /> {text}\r\n  </div>\r\n\r\n)\r\n\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbol`\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1uXaI\",\"pageNumber\":\"Pagination_pageNumber__2Jb84\",\"selectedPage\":\"Pagination_selectedPage__2t3Wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2qrl_\",\"selectedPage\":\"users_selectedPage__T76wO\"};","module.exports = __webpack_public_path__ + \"static/media/user.aa960f01.png\";","import {profileAPI, usersAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n    {id: 2, message: \"It's my first post\", likesCount: 11},\r\n    {id: 3, message: 'No', likesCount: 11},\r\n    {id: 4, message: 'Dada', likesCount: 11},\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: '',\r\n      };\r\n    }\r\n\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postId)\r\n      }\r\n    }\r\n\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {...state, profile: action.profile};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText,\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId\r\n})\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const res = await usersAPI.getProfile(userId)\r\n  dispatch(setUserProfile(res.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  const res = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(res.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const res = await profileAPI.updateStatus(status)\r\n  if (res.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}